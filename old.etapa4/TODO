#TODO, etapa 4: Análise Semântica.


#1 Adicionado lista de declaracoes globais (GLIST) em yacc.y e astree.h

#2- Recursoes a esquerda. GLIST ja foi declarada com recursao a esquerda.

#3- Criar regras para diferentes tipos. Eh necessario distingui-los na declaracao
	de variaveis (vardec), ao inserirmos o filho tipo no nó de vardec.

#4- Verificacao semantica propriamente dita. Declarada funcao astreeCreateDeclaration()
em astree.c

#5- Acrescentar defines de symbol para identificar tipos de cada identificador.
Para isso, foram acrescentados defines em hashtable.h

#6- Verificar
	#1 vars nao declaradas
	#2 declaracoes multiplas
	#3 incluir campo/defs datatype (acrescentado em hashtable.h)
	#4 Verificar datatypes corretos (operandos, expressoes)
	ex.: nao pode haver soma de booleanos
	
	#5 passagem de parametros tipos, numero de parametros
	#6 escalar usada como escalar, funcao como funcao, vetor como vetor, ponteiro como ponteiro.
	#7 indice de vetor no uso, expressão
	#8 return de uma funcao (valor deve ser o mesmo declarado como retorno)
	#9 
